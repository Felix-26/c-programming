main21.c


felix@myserver:~/cprogramming/pointers$ ./a.out
no of elements between pointers = 5


main22.c


felix@myserver:~/cprogramming/pointers$ ./a.out
enter the size of the array :4

enter the array : 1 2 3 4

how many elements to be rotated to left : 2

rotated array :
3       4       1       2 


main23.c


felix@myserver:~/cprogramming/pointers$ ./a.out
enter the string at 0 : parrot
enter the string at 1 : frog
enter the string at 2 : cobra
enter the string at 3 : shark
enter the string at 4 : horse
before swapping :

[0x7ffc7b50c500] -> parrot
[0x7ffc7b50c508] -> frog
[0x7ffc7b50c510] -> cobra
[0x7ffc7b50c518] -> shark
[0x7ffc7b50c520] -> horse
after swapping :

0x7ffc7b50c500  horse
0x7ffc7b50c508  frog
0x7ffc7b50c510  cobra
0x7ffc7b50c518  shark
0x7ffc7b50c520  parrot


main24.c


felix@myserver:~/cprogramming/pointers$ ./a.out
enter the string : elephant is a big animal.
starting index and ending index : 4 13
new substring = hant is a


main25.c


felix@myserver:~/cprogramming/pointers$ ./a.out
enter the string to check if it is a palindrome : malayalam
m == m ?
a == a ?
l == l ?
a == a ?
the string is a palindrome.


main26.c



main29.c


felix@myserver:~/cprogramming/pointers$ ./a.out
enter the string to be reversed by word : Hello World Program
before reversal by word :Hello World Program
after reversal by word :Program World Hello


main30.c


felix@myserver:~/cprogramming/pointers$ ./a.out
enter the size of the array : 10
arr[0] = 42
arr[0] = 7
arr[0] = 19
arr[0] = 85
arr[0] = 3
arr[0] = 56
arr[0] = 14
arr[0] = 67
arr[0] = 25
arr[0] = 9
before sorting
42      7       19      85      3       56      14      67      25      9
after sorting
3       7       9       14      19      25      42      56      67      85
enter the number to be searched : 67
loop 1
-------
l = 0
r = 9
mid = 4

loop 1
-------
l = 5
r = 9
mid = 7

loop 1
-------
l = 8
r = 9
mid = 8

search element is found at index : 8
